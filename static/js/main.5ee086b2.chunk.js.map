{"version":3,"sources":["components/score/score.svg","components/navbar/Navbar.js","components/alert/Alert.js","components/rules/Rules.js","components/score/LastScore.js","components/gamepad/GameDash.js","components/gamepad/Gamepad.js","components/score/Score.js","components/card/Board.js","App.js","index.js"],"names":["module","exports","Navbar","loginStatus","userName","signup","logout","mode","className","Button","variant","color","onClick","SimpleAlerts","errorStatus","classes","useStyles","root","Alert","severity","type","msg","makeStyles","theme","width","marginTop","spacing","position","top","right","fontSize","flexGrow","paper","textAlign","marginBottom","palette","text","secondary","marginLeft","padding","background","social","borderRadius","Rules","Grid","container","item","xs","Paper","style","href","target","rel","height","LastScore","score","title","display","margin","marginRight","minHeight","insidePaper","PlayButton","styled","border","boxShadow","GameDash","changeMode","useState","level","setLevel","easyClass","setEasyClass","medClass","setMedClass","hardClass","setHardClass","levelSelect","backgroundColor","id","value","alert","Gamepad","changeNewMode","updateScore","index","setIndex","timer","setTimer","s","setS","answerBtn1","setAnswerBtn1","answerBtn2","setAnswerBtn2","answerBtn3","setAnswerBtn3","answerBtn4","setAnswerBtn4","dataItem","data","useEffect","interval","setInterval","clearInterval","checkAnswer","ans","answer","question","option1","option2","option3","option4","scoreLogo","dashboard","src","alt","Board","Score","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setLoginStatus","setUserName","setErrorStatus","setScore","played","setPlayed","setMode","class","provider","auth","GoogleAuthProvider","promise","signInWithPopup","then","result","user","database","ref","uid","set","email","name","displayName","setTimeout","catch","e","signOut","console","log","currentUser","update","writeScore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ee086b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/score.97512cce.svg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst Navbar = ({ loginStatus, userName, signup, logout, mode }) => {\n    if (loginStatus === true) {\n        return (\n            <div className=\"centered\">\n                <Button className=\"login-info\" variant=\"contained\" color=\"primary\">\n                    Welcome,{' '}{userName}\n                </Button>\n                <Button className=\"logout-button\" variant=\"contained\" color=\"secondary\" onClick={logout}>\n                    Logout\n                </Button>\n            </div>\n        )\n    }\n    if (loginStatus === false)\n        return (\n            <div>\n                <Button className=\"login-button\" variant=\"contained\" color=\"primary\" onClick={signup}>\n                    Login\n                </Button>\n            </div>\n        );\n}\n\nexport default Navbar\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default function SimpleAlerts({ errorStatus }) {\n    const classes = useStyles();\n\n    return (\n        errorStatus !== null && (\n            <div className={classes.root}>\n                <Alert severity={errorStatus.type}>{errorStatus.msg}</Alert>\n            </div>\n        )\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '20%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        position: 'absolute',\n        top: '8px',\n        right: '16px',\n        fontSize: '18px'\n    },\n}));\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst Rules = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'black' }}>\n                        <h1>Rules</h1>\n                        <b>Every question will have a timer of 10 seconds.</b><hr />\n                        <b>Each gameplay consists of 10 questions.</b><hr />\n                    </Paper>\n\n                    <Paper className={classes.social} style={{ color: 'black' }}>\n                        <a href=\"http://shubhranshu14@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" >Click here for you feedback </a>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        textAlign: 'center',\n        marginBottom: '5px',\n        color: theme.palette.text.secondary,\n        width: '70%',\n        marginLeft: '-35%',\n        padding: '10px',\n        background: 'rgba(0, 0, 0, .1)'\n    },\n    social: {\n        // padding: theme.spacing(2),\n        textAlign: 'center',\n        marginBottom: '5px',\n        color: theme.palette.text.secondary,\n        width: '70%',\n        marginLeft: '-35%',\n        borderRadius: '20px',\n        padding: '10px',\n        background: 'rgba(0, 0, 0, .1)'\n    }\n\n}));\n\nexport default Rules;\n\n","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        marginBottom: '5px',\n        color: theme.palette.text.secondary,\n        width: '100px',\n        height: '35px',\n        borderRadius: '70px',\n        padding: '10px',\n        background: 'rgba(0, 0, 0, .1)',\n        marginLeft: '230%',\n        marginTop: '10px'\n    },\n}));\n\nconst LastScore = ({ score }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'black', fontSize: '2rem' }}>\n                        🏅 <b title='Last Score'>{score}</b>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default LastScore;\n\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Rules from '../rules/Rules';\nimport LastScore from '../score/LastScore';\n\nconst GameDash = ({ changeMode, score }) => {\n    const [level, setLevel] = useState('');\n    const [easyClass, setEasyClass] = useState('level-btn-e');\n    const [medClass, setMedClass] = useState('level-btn-m');\n    const [hardClass, setHardClass] = useState('level-btn-h');\n    const classes = useStyles();\n\n    const levelSelect = (level) => {\n        setLevel(level);\n    }\n\n    const setActiveEasy = () => {\n        setEasyClass('level-btn-e');\n        setMedClass('level-btn-active');\n        setHardClass('level-btn-active');\n    }\n\n    const setActiveMed = () => {\n        setEasyClass('level-btn-active');\n        setMedClass('level-btn-m');\n        setHardClass('level-btn-active');\n    }\n\n    const setActiveHard = () => {\n        setEasyClass('level-btn-active');\n        setMedClass('level-btn-active');\n        setHardClass('level-btn-h');\n    }\n\n    const validateLevel = () => {\n        if (level !== '') {\n            changeMode();\n        }\n        else {\n            alert(\"Please select level and then continue\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <LastScore score={score} />\n            </div>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'black', backgroundColor: 'white' }}>\n                        <div className={classes.insidePaper}>\n                            <h1>Select Level <span>💪🏻</span></h1>\n                            <Button id=\"btn-1\" className={easyClass} variant=\"contained\" onClick={() => { levelSelect(\"easy\"); setActiveEasy(); }} value=\"easy\" >\n                                Easy\n                            </Button>\n                            <Button id=\"btn-2\" className={medClass} variant=\"contained\" onClick={() => { levelSelect(\"med\"); setActiveMed(); }} value=\"medium\" >\n                                Medium\n                            </Button>\n                            <Button id=\"btn-3\" className={hardClass} variant=\"contained\" onClick={() => { levelSelect(\"hard\"); setActiveHard(); }} value=\"hard\" >\n                                Hard\n                            </Button>\n                        </div>\n                        <h1>Go Slow <span>🐢</span></h1>\n                        <div>\n                            <PlayButton onClick={validateLevel} >Play</PlayButton>\n                        </div>\n                    </Paper>\n                </Grid >\n            </Grid >\n            <div>\n                <Rules />\n            </div>\n        </div >\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        margin: 'auto',\n        marginRight: '15.5%',\n        width: '50%',\n        minHeight: '400px',\n        padding: '10px',\n    },\n    insidePaper: {\n        marginTop: '12%',\n    }\n}));\n\nconst PlayButton = styled(Button)({\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    width: '200px',\n    fontSize: '2rem',\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 80,\n    padding: '0 30px',\n});\n\nexport default GameDash;","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport data from '../../../src/database/data.json';\n\nconst Gamepad = ({ changeNewMode, updateScore }) => {\n    const [index, setIndex] = useState(0);\n    const [timer, setTimer] = useState(10);\n    const [s, setS] = useState(0);\n    const [answerBtn1, setAnswerBtn1] = useState('answer-btn');\n    const [answerBtn2, setAnswerBtn2] = useState('answer-btn');\n    const [answerBtn3, setAnswerBtn3] = useState('answer-btn');\n    const [answerBtn4, setAnswerBtn4] = useState('answer-btn');\n\n\n    let dataItem = data[index];\n    const classes = useStyles();\n\n    const clickedOne = () => {\n        setAnswerBtn1(\"answer-btn-active\");\n        setAnswerBtn2(\"answer-btn\");\n        setAnswerBtn3(\"answer-btn\");\n        setAnswerBtn4(\"answer-btn\");\n    }\n\n    const clickedTwo = () => {\n        setAnswerBtn1(\"answer-btn\");\n        setAnswerBtn2(\"answer-btn-active\");\n        setAnswerBtn3(\"answer-btn\");\n        setAnswerBtn4(\"answer-btn\");\n    }\n\n    const clickedThree = () => {\n        setAnswerBtn1(\"answer-btn\");\n        setAnswerBtn2(\"answer-btn\");\n        setAnswerBtn3(\"answer-btn-active\");\n        setAnswerBtn4(\"answer-btn\");\n    }\n\n    const clickedFour = () => {\n        setAnswerBtn1(\"answer-btn\");\n        setAnswerBtn2(\"answer-btn\");\n        setAnswerBtn3(\"answer-btn\");\n        setAnswerBtn4(\"answer-btn-active\");\n    }\n\n    //\n    useEffect(() => {\n        if (index < 10) {\n            const interval = setInterval(() => {\n                setIndex(index => (index + 1));\n                setAnswerBtn1(\"answer-btn\");\n                setAnswerBtn2(\"answer-btn\");\n                setAnswerBtn3(\"answer-btn\");\n                setAnswerBtn4(\"answer-btn\");\n            }, 10000);\n            const timer = setInterval(() => {\n                setTimer(timer => (timer - 1));\n            }, 1000);\n            return () => {\n                if (interval) clearInterval(interval);\n                if (timer) clearInterval(timer);\n            }\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (timer === 0) {\n            setTimer(10);\n        }\n    }, [timer]);\n\n    useEffect(() => {\n        if (index === 9) {\n            updateScore(s);\n            changeNewMode();\n        }\n    }, [index, updateScore, changeNewMode, s]);\n\n    const checkAnswer = (ans) => {\n        if (dataItem.answer === ans) setS(s => (s + 1));\n    }\n    //\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'black', backgroundColor: 'white' }}>\n                        <span className=\"timer\">⏱ {timer}</span>\n                        <div className={classes.insidePaper}>\n                            <h1>{dataItem.question}</h1>\n                            <Button className={answerBtn1} variant=\"contained\" onClick={() => { checkAnswer(`${dataItem.option1}`); clickedOne(); }}>\n                                {dataItem.option1}\n                            </Button>\n                            <Button className={answerBtn2} variant=\"contained\" onClick={() => { checkAnswer(`${dataItem.option2}`); clickedTwo(); }}>\n                                {dataItem.option2}\n                            </Button>\n                            <Button className={answerBtn3} variant=\"contained\" onClick={() => { checkAnswer(`${dataItem.option3}`); clickedThree(); }}>\n                                {dataItem.option3}\n                            </Button>\n                            <Button className={answerBtn4} variant=\"contained\" onClick={() => { checkAnswer(`${dataItem.option4}`); clickedFour(); }}>\n                                {dataItem.option4}\n                            </Button>\n                        </div>\n                    </Paper >\n                </Grid >\n            </Grid >\n        </div >\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        margin: 'auto',\n        width: '50%',\n        minHeight: '400px',\n        padding: '10px',\n    },\n    insidePaper: {\n        marginTop: '13%'\n    }\n}));\n\nexport default Gamepad;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport scoreLogo from './score.svg';\nimport Button from '@material-ui/core/Button';\n\n\nconst Gamepad = ({ score, dashboard }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'black' }}>\n                        <div className={classes.insidePaper}>\n                            <img className={classes.scoreLogo} src={scoreLogo} alt=\"meddle\" />\n                            <h1 className={classes.score}>Your Score </h1>\n                            <h1 className={classes.score}>{score}/10</h1>\n                        </div>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <div className=\"dash-btn-container\">\n                <Button className=\"dash-btn\" variant=\"contained\" onClick={dashboard} >\n                    Go Back\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        margin: 'auto',\n        width: '30%',\n        minHeight: '300px',\n        padding: '10px',\n        background: 'rgba(0, 0, 0, .5)'\n    },\n    insidePaper: {\n    },\n    scoreLogo: {\n        width: '40%'\n    },\n    score: {\n        color: 'red'\n    }\n}));\n\nexport default Gamepad;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport GameDash from '../gamepad/GameDash';\nimport Gamepad from '../gamepad/Gamepad';\nimport Score from '../score/Score'\n\nconst Board = ({ mode, level, changeMode, changeNewMode, score, updateScore, dashboard }) => {\n    const classes = useStyles();\n\n    if (mode === 0) return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs >\n                    <Paper className={classes.paper} style={{ color: 'white', backgroundColor: 'purple' }}>About</Paper>\n                    <Paper className={classes.paper} style={{ color: 'black', backgroundColor: 'white' }}>Quiz game app for kidos.</Paper>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className={classes.paper} style={{ color: 'white', backgroundColor: 'orange' }}>Leaderboard</Paper>\n                    <Paper className={classes.paper} style={{ color: 'black', backgroundColor: 'white' }}>\n                        <ol>\n                            <li>\n                                Player 1\n                            </li>\n                            <li>\n                                Player 2\n                            </li>\n                            <li>\n                                Player 3\n                            </li>\n                            <li>\n                                Player 4\n                            </li>\n                            <li>\n                                Player 5\n                            </li>\n                            <li>\n                                Player 6\n                            </li>\n                            <li>\n                                Player 7\n                            </li>\n                            <li>\n                                Player 8\n                            </li>\n                            <li>\n                                Player 9\n                            </li>\n                            <li>\n                                Player 10\n                            </li>\n                        </ol>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n        </div>\n    );\n    else if (mode === 1) {\n        return (\n            <GameDash changeMode={changeMode} score={score} />\n        );\n    }\n\n    else if (mode === 2) {\n        return (\n            <Gamepad changeNewMode={changeNewMode} updateScore={updateScore} />\n        );\n    }\n    else if (mode === 3) {\n        return (\n            <Score score={score} dashboard={dashboard} />\n        )\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        margin: 'auto',\n        width: '20%',\n        padding: '10px',\n    },\n}));\n\nexport default Board;","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport Alert from './components/alert/Alert';\nimport Board from './components/card/Board';\n\nvar firebase = require('firebase');\n\n/* firebase coniguration */\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDXpKrNDj6wjiaqFGdfx8CRBkvZAzhJnAg\",\n  authDomain: \"game-cf8b0.firebaseapp.com\",\n  databaseURL: \"https://game-cf8b0.firebaseio.com\",\n  projectId: \"game-cf8b0\",\n  storageBucket: \"game-cf8b0.appspot.com\",\n  messagingSenderId: \"635154006400\",\n  appId: \"1:635154006400:web:22d8083e7ced2e72190165\"\n};\n/* Initialize Firebase */\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [errorStatus, setErrorStatus] = useState(null);\n  const [score, setScore] = useState(0);\n  const [played, setPlayed] = useState(false);\n\n  /* states\n    * 0: idle state\n    * 1: user dashboard\n    * 2: gameplay\n    * 3: score card\n  */\n  const [mode, setMode] = useState(0);\n\n  const signup = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    var promise = firebase.auth().signInWithPopup(provider);\n\n    promise\n      .then(result => {\n        var user = result.user;\n\n        firebase.database().ref('users/' + user.uid).set({\n          email: user.email,\n          name: user.displayName,\n        });\n\n        setErrorStatus(({ msg: 'Login successfull', type: 'success' }));\n        setTimeout(() => {\n          setErrorStatus(null);\n          setUserName(user.displayName);\n          setLoginStatus(true);\n          setMode(1);\n        }, 1000);\n\n      });\n\n    promise\n      .catch(e => {\n        setErrorStatus(({ msg: 'Login failed', type: 'error' }))\n        setTimeout(() => {\n          setErrorStatus(null);\n        }, 3000);\n      })\n  }\n\n  const logout = () => {\n    firebase.auth().signOut();\n    setErrorStatus({ msg: 'Logged out successfully', type: 'success' });\n    setLoginStatus(false);\n    setMode(0);\n    setUserName('');\n    setScore(0);\n    setPlayed(false);\n    setScore(0);\n    setTimeout(() => {\n      setErrorStatus(null);\n    }, 2000);\n  }\n\n  const changeMode = () => {\n    setTimeout(() => {\n      setMode(2);\n    }, 2000);\n  }\n\n  const changeNewMode = () => {\n    setMode(3);\n  }\n\n  const updateScore = (s) => {\n    setScore(s);\n    setPlayed(true);\n  }\n\n  const writeScore = () => {\n    console.log(score);\n    console.log(played);\n    let user = firebase.auth().currentUser;\n    firebase.database().ref('users/' + user.uid).update({\n      score: score,\n      played: played\n    });\n  }\n\n  const dashboard = () => {\n    writeScore();\n    setMode(1);\n  }\n\n  return (\n    <div >\n      <div class=\"bg\"></div>\n      <div class=\"bg bg2\"></div>\n      <div class=\"bg bg3\"></div>\n      <Navbar loginStatus={loginStatus} userName={userName} signup={signup} logout={logout} />\n      <Alert errorStatus={errorStatus} />\n      <Board mode={mode} changeMode={changeMode} changeNewMode={changeNewMode} score={score} updateScore={updateScore} dashboard={dashboard} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}